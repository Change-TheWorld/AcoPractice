微众银行

#include <stdio.h>
#include <iostream>
using namespace std;

int NumberOf1(long long n) 
{
    int count = 0;
    while(n) 
    {
        count++;
        n = (n -1) & n;
    }
    return count;
}

int power(int a) {
    int result = 1;
    for(int i = 0; i<a; ++i)
        result = result<<1;
    return result;
}

int main() {
    int a,b,c;
    long long sum = 0;
    int result = 0;
    cin >> a >> b >>c;
    if(c>=1 && a > b && b > c && a <=1000000000){
        sum = power(a) + power(b) - power(c);
        result = NumberOf1(sum);
        cout << result;
    }
    return 0;
}





#include <stdio.h>
#include <iostream>
#include<vector>
using namespace std;

bool isHuiWen(int n) {
    bool result = true;
    vector<int> binArray;	// 动态数组
    int len = 0;
    while (n != 0)
    {
        binArray.push_back(n%2);
        len++;
        n = n/2;
    }

    for (int i=0; i<len ;i++) {
        if (binArray[i] != binArray[len-1-i])
        {
            result = false;
            break;
        }
    }
    return result;
}

int main()
{
    long long n; 
    int count = 0;   
    cin >> n;
    if(n >=1 && n <= 1000000000000000000) {
        for(long long i = 0; i < n; ++i) {
            if(isHuiWen(i))
                ++count;
        }
    }
    
    cout<<count;
    return 0;
}




